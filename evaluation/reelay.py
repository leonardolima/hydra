import yaml
import sys

y=yaml.safe_load(open(sys.argv[1]))
atoms=y["atoms"].split(" ")

f=open("main.cpp", "w")
print("#include \"iostream\"", file=f)
print("#include \"array\"", file=f)
print("#include \"csv.h\"", file=f)
print("", file=f)
print("#include \"Monitor" + y["name"] + ".hpp\"", file=f)
print("", file=f)
print("int main(int argc, char **argv) {", file=f)
print("  io::CSVReader<" + str(len(atoms)) + "> reader(\"" + sys.argv[2]  + "\");", file=f)
print("  reader.read_header(io::ignore_extra_column, " + ", ".join(map(lambda s : "\"" + s + "\"", atoms)) + ");", file=f)
print("  int " + ", ".join(atoms) + ", output;", file=f)
print("", file=f)
print("  int tp = 0;", file=f)
print("  Monitor" + y["name"] + "<int> monitor = Monitor" + y["name"] + "<int>();", file=f)
print("", file=f)
print("  while(reader.read_row(" + ", ".join(atoms) + ")) {", file=f)
print("    monitor.update(" + ", ".join(atoms) + ");", file=f)
print("    output = monitor.output();", file=f)
print("    std::cout << tp << \":0 \" << (output ? \"true\" : \"false\") << \"\\n\";", file=f)
print("    tp++;", file=f)
print("  }", file=f)
print("", file=f)
print("  return 0;", file=f)
print("}", file=f)
f.close()
